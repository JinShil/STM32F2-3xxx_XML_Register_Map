<?xml version="1.0" encoding="utf-8"?>
<!--
    Copyright © 2015 Michael V. Franklin
     
    This file is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This file is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this file.  If not, see <http://www.gnu.org/licenses/>.
-->
<Peripheral>
  <Name>DMA2D</Name>
  <Description>Chrom-Art Accelerator™ controller</Description>
  <Offset>0x00000040</Offset>
  <Registers>
    <Register>
      <Name>CR</Name>
      <Description>DMA2D control register</Description>
      <Offset>0x0000</Offset>
      <ResetValue>0x00000000</ResetValue>
      <Access>Byte_HalfWord_Word</Access>
      <BitFields>
        <BitField>
          <Name>MODE</Name>
          <Description>DMA2D mode 
This bit is set and cleared by software. It cannot be modified while a transfer is ongoing.
00: Memory-to-memory (FG fetch only)
01: Memory-to-memory with PFC (FG fetch only with FG PFC active)
10: Memory-to-memory with blending (FG and BG fetch with PFC and blending)
11: Register-to-memory (no FG nor BG, only output stage active)</Description>
          <EndBit>17</EndBit>
          <StartBit>16</StartBit>
          <Mutability>rw</Mutability>
        </BitField>
        <BitField>
          <Name>CEIE</Name>
          <Description>Configuration Error Interrupt Enable 
This bit is set and cleared by software.
0: CE interrupt disable
1: CE interrupt enable</Description>
          <EndBit>13</EndBit>
          <StartBit>13</StartBit>
          <Mutability>rw</Mutability>
        </BitField>
        <BitField>
          <Name>CTCIE</Name>
          <Description>CLUT transfer complete interrupt enable 
This bit is set and cleared by software.
0: CTC interrupt disable
1: CTC interrupt enable</Description>
          <EndBit>12</EndBit>
          <StartBit>12</StartBit>
          <Mutability>rw</Mutability>
        </BitField>
        <BitField>
          <Name>CAEIE</Name>
          <Description>CLUT access error interrupt enable 
This bit is set and cleared by software.
0: CAE interrupt disable
1: CAE interrupt enable</Description>
          <EndBit>11</EndBit>
          <StartBit>11</StartBit>
          <Mutability>rw</Mutability>
        </BitField>
        <BitField>
          <Name>TWIE</Name>
          <Description>Transfer watermark interrupt enable 
This bit is set and cleared by software.
0: TW interrupt disable
1: TW interrupt enable</Description>
          <EndBit>10</EndBit>
          <StartBit>10</StartBit>
          <Mutability>rw</Mutability>
        </BitField>
        <BitField>
          <Name>TCIE</Name>
          <Description>Transfer complete interrupt enable 
This bit is set and cleared by software.
0: TC interrupt disable
1: TC interrupt enable</Description>
          <EndBit>9</EndBit>
          <StartBit>9</StartBit>
          <Mutability>rw</Mutability>
        </BitField>
        <BitField>
          <Name>TEIE</Name>
          <Description>Transfer error interrupt enable 
This bit is set and cleared by software.
0: TE interrupt disable
1: TE interrupt enable</Description>
          <EndBit>8</EndBit>
          <StartBit>8</StartBit>
          <Mutability>rw</Mutability>
        </BitField>
        <BitField>
          <Name>ABORT</Name>
          <Description>Abort 
This bit can be used to abort the current transfer. This bit is set by software and is
automatically reset by hardware when the START bit is reset.
0: No transfer abort requested
1: Transfer abort requested</Description>
          <EndBit>2</EndBit>
          <StartBit>2</StartBit>
          <Mutability>rs</Mutability>
        </BitField>
        <BitField>
          <Name>SUSP</Name>
          <Description>Suspend 
This bit can be used to suspend the current transfer. This bit is set and reset by
software. It is automatically reset by hardware when the START bit is reset.
0: Transfer not suspended
1: Transfer suspended</Description>
          <EndBit>1</EndBit>
          <StartBit>1</StartBit>
          <Mutability>rw</Mutability>
        </BitField>
        <BitField>
          <Name>START</Name>
          <Description>Start 
This bit can be used to launch the DMA2D according to the parameters loaded in the
various configuration registers. This bit is automatically reset by the following events:
– At the end of the transfer
– When the data transfer is aborted by the user application by setting the ABORT
bit in DMA2D_CR
– When a data transfer error occurs
– When the data transfer has not started due to a configuration error or another
transfer operation already ongoing (automatic CLUT loading).</Description>
          <EndBit>0</EndBit>
          <StartBit>0</StartBit>
          <Mutability>rs</Mutability>
        </BitField>
      </BitFields>
    </Register>
    
    <Register>
      <Name>ISR</Name>
      <Description>DMA2D Interrupt Status Register</Description>
      <Offset>0x0004</Offset>
      <ResetValue>0x00000000</ResetValue>
      <Access>Byte_HalfWord_Word</Access>
      <BitFields>
        <BitField>
          <Name>CEIF</Name>
          <Description>Configuration error interrupt flag 
This bit is set when the START bit of DMA2D_CR, DMA2DFGPFCCR or
DMA2D_BGPFCCR is set and a wrong configuration has been programmed.</Description>
          <EndBit>5</EndBit>
          <StartBit>5</StartBit>
          <Mutability>r</Mutability>
        </BitField>
        <BitField>
          <Name>CTCIF</Name>
          <Description>CLUT transfer complete interrupt flag 
This bit is set when the CLUT copy from a system memory area to the internal DMA2D
memory is complete.</Description>
          <EndBit>4</EndBit>
          <StartBit>4</StartBit>
          <Mutability>r</Mutability>
        </BitField>
        <BitField>
          <Name>CAEIF</Name>
          <Description>CLUT access error interrupt flag 
This bit is set when the CPU accesses the CLUT while the CLUT is being automatically
copied from a system memory to the internal DMA2D.</Description>
          <EndBit>3</EndBit>
          <StartBit>3</StartBit>
          <Mutability>r</Mutability>
        </BitField>
        <BitField>
          <Name>TWIF</Name>
          <Description>Transfer watermark interrupt flag 
This bit is set when the last pixel of the watermarked line has been transferred.</Description>
          <EndBit>2</EndBit>
          <StartBit>2</StartBit>
          <Mutability>r</Mutability>
        </BitField>
        <BitField>
          <Name>TCIF</Name>
          <Description>Transfer complete interrupt flag 
This bit is set when a DMA2D transfer operation is complete (data transfer only).</Description>
          <EndBit>1</EndBit>
          <StartBit>1</StartBit>
          <Mutability>r</Mutability>
        </BitField>
        <BitField>
          <Name>TEIF</Name>
          <Description>Transfer error interrupt flag 
This bit is set when an error occurs during a DMA transfer (data transfer or automatic
CLUT loading).</Description>
          <EndBit>0</EndBit>
          <StartBit>0</StartBit>
          <Mutability>r</Mutability>
        </BitField>
      </BitFields>
    </Register>
    
    <Register>
      <Name>IFCR</Name>
      <Description>DMA2D interrupt flag clear register</Description>
      <Offset>0x0008</Offset>
      <ResetValue>0x00000000</ResetValue>
      <Access>Byte_HalfWord_Word</Access>
      <BitFields>
        <BitField>
          <Name>CCEIF</Name>
          <Description>Clear configuration error interrupt flag 
Programming this bit to 1 clears the CEIF flag in the DMA2D_ISR register</Description>
          <EndBit>5</EndBit>
          <StartBit>5</StartBit>
          <Mutability>rc_w1</Mutability>
        </BitField>
        <BitField>
          <Name>CCTCIF</Name>
          <Description>Clear CLUT transfer complete interrupt flag 
Programming this bit to 1 clears the CTCIF flag in the DMA2D_ISR register</Description>
          <EndBit>4</EndBit>
          <StartBit>4</StartBit>
          <Mutability>rc_w1</Mutability>
        </BitField>
        <BitField>
          <Name>CAECIF</Name>
          <Description>Clear CLUT access error interrupt flag 
Programming this bit to 1 clears the CAEIF flag in the DMA2D_ISR register</Description>
          <EndBit>3</EndBit>
          <StartBit>3</StartBit>
          <Mutability>rc_w1</Mutability>
        </BitField>
        <BitField>
          <Name>CTWIF</Name>
          <Description>Clear transfer watermark interrupt flag 
Programming this bit to 1 clears the TWIF flag in the DMA2D_ISR register</Description>
          <EndBit>2</EndBit>
          <StartBit>2</StartBit>
          <Mutability>rc_w1</Mutability>
        </BitField>
        <BitField>
          <Name>CTCIF</Name>
          <Description>Clear transfer complete interrupt flag 
Programming this bit to 1 clears the TCIF flag in the DMA2D_ISR register</Description>
          <EndBit>1</EndBit>
          <StartBit>1</StartBit>
          <Mutability>rc_w1</Mutability>
        </BitField>
        <BitField>
          <Name>CTEIF</Name>
          <Description>Clear Transfer error interrupt flag 
Programming this bit to 1 clears the TEIF flag in the DMA2D_ISR register</Description>
          <EndBit>0</EndBit>
          <StartBit>0</StartBit>
          <Mutability>rc_w1</Mutability>
        </BitField>
      </BitFields>
    </Register>
    
    <Register>
      <Name>FGMAR</Name>
      <Description>DMA2D foreground memory address register</Description>
      <Offset>0x000C</Offset>
      <ResetValue>0x00000000</ResetValue>
      <Access>Byte_HalfWord_Word</Access>
      <BitFields>
        <BitField>
          <Name>MA</Name>
          <Description>Memory address 
Address of the data used for the foreground image. This register can only be written
when data transfers are disabled. Once the data transfer has started, this register is
read-only.
The address alignment must match the image format selected e.g. a 32-bit per pixel
format must be 32-bit aligned, a 16-bit per pixel format must be 16-bit aligned and a 4-
bit per pixel format must be 8-bit aligned.</Description>
          <EndBit>31</EndBit>
          <StartBit>0</StartBit>
          <Mutability>rw</Mutability>
        </BitField>
      </BitFields>
    </Register>
    
    <Register>
      <Name>FGOR</Name>
      <Description>DMA2D foreground offset register</Description>
      <Offset>0x0010</Offset>
      <ResetValue>0x00000000</ResetValue>
      <Access>Byte_HalfWord_Word</Access>
      <BitFields>
        <BitField>
          <Name>LO</Name>
          <Description>Line offset 
Line offset used for the foreground expressed in pixel. This value is used to generate
the address. It is added at the end of each line to determine the starting address of the
next line.
These bits can only be written when data transfers are disabled. Once a data transfer
has started, they become read-only.
If the image format is 4-bit per pixel, the line offset must be even.</Description>
          <EndBit>13</EndBit>
          <StartBit>0</StartBit>
          <Mutability>rw</Mutability>
        </BitField>
      </BitFields>
    </Register>
    
    <Register>
      <Name>BGMAR</Name>
      <Description>DMA2D background memory address register</Description>
      <Offset>0x0014</Offset>
      <ResetValue>0x00000000</ResetValue>
      <Access>Byte_HalfWord_Word</Access>
      <BitFields>
        <BitField>
          <Name>MA</Name>
          <Description>Memory address 
Address of the data used for the background image. This register can only be written
when data transfers are disabled. Once a data transfer has started, this register is readonly.
The address alignment must match the image format selected e.g. a 32-bit per pixel
format must be 32-bit aligned, a 16-bit per pixel format must be 16-bit aligned and a 4-
bit per pixel format must be 8-bit aligned.</Description>
          <EndBit>31</EndBit>
          <StartBit>0</StartBit>
          <Mutability>rw</Mutability>
        </BitField>
      </BitFields>
    </Register>
    
    <Register>
      <Name>BGOR</Name>
      <Description>DMA2D background offset register</Description>
      <Offset>0x0018</Offset>
      <ResetValue>0x00000000</ResetValue>
      <Access>Byte_HalfWord_Word</Access>
      <BitFields>
        <BitField>
          <Name>LO</Name>
          <Description>Line offset 
Line offset used for the background image (expressed in pixel). This value is used for
the address generation. It is added at the end of each line to determine the starting
address of the next line.
These bits can only be written when data transfers are disabled. Once data transfer has
started, they become read-only.
If the image format is 4-bit per pixel, the line offset must be even.</Description>
          <EndBit>13</EndBit>
          <StartBit>0</StartBit>
          <Mutability>rw</Mutability>
        </BitField>
      </BitFields>
    </Register>
    
    <Register>
      <Name>FGPFCCR</Name>
      <Description>DMA2D foreground PFC control register</Description>
      <Offset>0x001C</Offset>
      <ResetValue>0x00000000</ResetValue>
      <Access>Byte_HalfWord_Word</Access>
      <BitFields>
        <BitField>
          <Name>ALPHA</Name>
          <Description>Alpha value 
These bits define a fixed alpha channel value which can replace the original alpha value
or be multiplied by the original alpha value according to the alpha mode selected
through the AM[1:0] bits.
These bits can only be written when data transfers are disabled. Once a transfer has
started, they become read-only.</Description>
          <EndBit>31</EndBit>
          <StartBit>24</StartBit>
          <Mutability>rw</Mutability>
        </BitField>
        <BitField>
          <Name>AM</Name>
          <Description>Alpha mode 
These bits select the alpha channel value to be used for the foreground image. They
can only be written data the transfer are disabled. Once the transfer has started, they
become read-only.
00: No modification of the foreground image alpha channel value
01: Replace original foreground image alpha channel value by ALPHA[7: 0]
10: Replace original foreground image alpha channel value by ALPHA[7:0] multiplied
with original alpha channel value
other configurations are meaningless</Description>
          <EndBit>17</EndBit>
          <StartBit>16</StartBit>
          <Mutability>rw</Mutability>
        </BitField>
        <BitField>
          <Name>CS</Name>
          <Description>CLUT size 
These bits define the size of the CLUT used for the foreground image. Once the CLUT
transfer has started, this field is read-only.
The number of CLUT entries is equal to CS[7:0] + 1.</Description>
          <EndBit>15</EndBit>
          <StartBit>8</StartBit>
          <Mutability>rw</Mutability>
        </BitField>
        <BitField>
          <Name>START</Name>
          <Description>Start 
This bit can be set to start the automatic loading of the CLUT. It is automatically reset:
– at the end of the transfer
– when the transfer is aborted by the user application by setting the ABORT bit in
DMA2D_CR
– when a transfer error occurs
– when the transfer has not started due to a configuration error or another
transfer operation already ongoing (data transfer or automatic background
CLUT transfer).</Description>
          <EndBit>5</EndBit>
          <StartBit>5</StartBit>
          <Mutability>rc_w1</Mutability>
        </BitField>
        <BitField>
          <Name>CCM</Name>
          <Description>CLUT color mode 
This bit defines the color format of the CLUT. It can only be written when the transfer is
disabled. Once the CLUT transfer has started, this bit is read-only.
0: ARGB8888
1: RGB888
others: meaningless</Description>
          <EndBit>4</EndBit>
          <StartBit>4</StartBit>
          <Mutability>rw</Mutability>
        </BitField>
        <BitField>
          <Name>CM</Name>
          <Description>Color mode 
These bits defines the color format of the foreground image. They can only be written
when data transfers are disabled. Once the transfer has started, they are read-only.
0000: ARGB8888
0001: RGB888
0010: RGB565
0011: ARGB1555
0100: ARGB4444
0101: L8
0110: AL44
0111: AL88
1000: L4
1001: A8
1010: A4
others: meaningless</Description>
          <EndBit>3</EndBit>
          <StartBit>0</StartBit>
          <Mutability>rw</Mutability>
        </BitField>
      </BitFields>
    </Register>
    
    <Register>
      <Name>FGCOLR</Name>
      <Description>DMA2D foreground color register</Description>
      <Offset>0x0020</Offset>
      <ResetValue>0x00000000</ResetValue>
      <Access>Byte_HalfWord_Word</Access>
      <BitFields>
        <BitField>
          <Name>RED</Name>
          <Description>Red Value 
These bits defines the red value for the A4 or A8 mode of the foreground image. They
can only be written when data transfers are disabled. Once the transfer has started,
they are read-only.</Description>
          <EndBit>23</EndBit>
          <StartBit>16</StartBit>
          <Mutability>rw</Mutability>
        </BitField>
        <BitField>
          <Name>GREEN</Name>
          <Description>Green Value 
These bits defines the green value for the A4 or A8 mode of the foreground image. They
can only be written when data transfers are disabled. Once the transfer has started,
They are read-only.</Description>
          <EndBit>15</EndBit>
          <StartBit>8</StartBit>
          <Mutability>rw</Mutability>
        </BitField>
        <BitField>
          <Name>BLUE</Name>
          <Description>Blue Value 
These bits defines the blue value for the A4 or A8 mode of the foreground image. They
can only be written when data transfers are disabled. Once the transfer has started,
They are read-only.</Description>
          <EndBit>7</EndBit>
          <StartBit>0</StartBit>
          <Mutability>rw</Mutability>
        </BitField>
      </BitFields>
    </Register>
    
    <Register>
      <Name>BGPFCCR</Name>
      <Description>DMA2D background PFC control register</Description>
      <Offset>0x0024</Offset>
      <ResetValue>0x00000000</ResetValue>
      <Access>Byte_HalfWord_Word</Access>
      <BitFields>
        <BitField>
          <Name>ALPHA</Name>
          <Description>Alpha value 
These bits define a fixed alpha channel value which can replace the original alpha value
or be multiplied with the original alpha value according to the alpha mode selected with
bits AM[1: 0]. These bits can only be written when data transfers are disabled. Once the
transfer has started, they are read-only.</Description>
          <EndBit>31</EndBit>
          <StartBit>24</StartBit>
          <Mutability>rw</Mutability>
        </BitField>
        <BitField>
          <Name>AM</Name>
          <Description>Alpha mode 
These bits define which alpha channel value to be used for the background image.
These bits can only be written when data transfers are disabled. Once the transfer has
started, they are read-only.
00: No modification of the foreground image alpha channel value
01: Replace original background image alpha channel value by ALPHA[7: 0]
10: Replace original background image alpha channel value by ALPHA[7:0] multiplied
with original alpha channel value
others: meaningless</Description>
          <EndBit>17</EndBit>
          <StartBit>16</StartBit>
          <Mutability>rw</Mutability>
        </BitField>
        <BitField>
          <Name>CS</Name>
          <Description>CLUT size 
These bits define the size of the CLUT used for the BG. Once the CLUT transfer has
started, this field is read-only.
The number of CLUT entries is equal to CS[7:0] + 1.</Description>
          <EndBit>15</EndBit>
          <StartBit>8</StartBit>
          <Mutability>rw</Mutability>
        </BitField>
        <BitField>
          <Name>START</Name>
          <Description>Start 
This bit is set to start the automatic loading of the CLUT. This bit is automatically reset:
– at the end of the transfer
– when the transfer is aborted by the user application by setting the ABORT bit in
the DMA2D_CR
– when a transfer error occurs
– when the transfer has not started due to a configuration error or another
transfer operation already on going (data transfer or automatic BackGround
CLUT transfer).</Description>
          <EndBit>5</EndBit>
          <StartBit>5</StartBit>
          <Mutability>rc_w1</Mutability>
        </BitField>
        <BitField>
          <Name>CCM</Name>
          <Description>CLUT Color mode 
These bits define the color format of the CLUT. This register can only be written when
the transfer is disabled. Once the CLUT transfer has started, this bit is read-only.
0: ARGB8888
1: RGB888
others: meaningless</Description>
          <EndBit>4</EndBit>
          <StartBit>4</StartBit>
          <Mutability>rw</Mutability>
        </BitField>
        <BitField>
          <Name>CM</Name>
          <Description>Color mode 
These bits define the color format of the foreground image. These bits can only be
written when data transfers are disabled. Once the transfer has started, they are readonly.
0000: ARGB8888
0001: RGB888
0010: RGB565
0011: ARGB1555
0100: ARGB4444
0101: L8
0110: AL44
0111: AL88
1000: L4
1001: A8
1010: A4
others: meaningless</Description>
          <EndBit>3</EndBit>
          <StartBit>0</StartBit>
          <Mutability>rw</Mutability>
        </BitField>
      </BitFields>
    </Register>
    
    <Register>
      <Name>BGCOLR</Name>
      <Description>DMA2D background color register</Description>
      <Offset>0x0028</Offset>
      <ResetValue>0x00000000</ResetValue>
      <Access>Byte_HalfWord_Word</Access>
      <BitFields>
        <BitField>
          <Name>RED</Name>
          <Description>Red Value 
These bits define the red value for the A4 or A8 mode of the background. These bits
can only be written when data transfers are disabled. Once the transfer has started,
they are read-only.</Description>
          <EndBit>23</EndBit>
          <StartBit>16</StartBit>
          <Mutability>rw</Mutability>
        </BitField>
        <BitField>
          <Name>GREEN</Name>
          <Description>0Green Value 
These bits define the green value for the A4 or A8 mode of the background. These bits
can only be written when data transfers are disabled. Once the transfer has started,
they are read-only.</Description>
          <EndBit>15</EndBit>
          <StartBit>8</StartBit>
          <Mutability>rw</Mutability>
        </BitField>
        <BitField>
          <Name>BLUE</Name>
          <Description>Blue Value 
These bits define the blue value for the A4 or A8 mode of the background. These bits
can only be written when data transfers are disabled. Once the transfer has started,
they are read-only.</Description>
          <EndBit>7</EndBit>
          <StartBit>0</StartBit>
          <Mutability>rw</Mutability>
        </BitField>
      </BitFields>
    </Register>
    
    <Register>
      <Name>FGCMAR</Name>
      <Description>DMA2D foreground CLUT memory address register</Description>
      <Offset>0x002C</Offset>
      <ResetValue>0x00000000</ResetValue>
      <Access>Byte_HalfWord_Word</Access>
      <BitFields>
        <BitField>
          <Name>MA</Name>
          <Description>0Memory Address 
Address of the data used for the CLUT address dedicated to the foreground image. This
register can only be written when no transfer is ongoing. Once the CLUT transfer has
started, this register is read-only.
If the foreground CLUT format is 32-bit, the address must be 32-bit aligned.</Description>
          <EndBit>31</EndBit>
          <StartBit>0</StartBit>
          <Mutability>rw</Mutability>
        </BitField>
      </BitFields>
    </Register>
    
    <Register>
      <Name>BGCMAR</Name>
      <Description>DMA2D background CLUT memory address register</Description>
      <Offset>0x0030</Offset>
      <ResetValue>0x00000000</ResetValue>
      <Access>Byte_HalfWord_Word</Access>
      <BitFields>
        <BitField>
          <Name>MA</Name>
          <Description>Memory address 
Address of the data used for the CLUT address dedicated to the background image.
This register can only be written when no transfer is on going. Once the CLUT transfer
has started, this register is read-only.
If the background CLUT format is 32-bit, the address must be 32-bit aligned.</Description>
          <EndBit>31</EndBit>
          <StartBit>0</StartBit>
          <Mutability>rw</Mutability>
        </BitField>
      </BitFields>
    </Register>
    
    <Register>
      <Name>OPFCCR</Name>
      <Description>DMA2D output PFC control register</Description>
      <Offset>0x0034</Offset>
      <ResetValue>0x00000000</ResetValue>
      <Access>Byte_HalfWord_Word</Access>
      <BitFields>
        <BitField>
          <Name>CM</Name>
          <Description>Color mode 
These bits define the color format of the output image. These bits can only be written
when data transfers are disabled. Once the transfer has started, they are read-only.
000: ARGB8888
001: RGB888
010: RGB565
011: ARGB1555
100: ARGB4444
others: meaningless</Description>
          <EndBit>2</EndBit>
          <StartBit>0</StartBit>
          <Mutability>rw</Mutability>
        </BitField>
      </BitFields>
    </Register>
    
    <Register>
      <Name>OCOLR</Name>
      <Description>DMA2D output color register</Description>
      <Offset>0x0038</Offset>
      <ResetValue>0x00000000</ResetValue>
      <Access>Byte_HalfWord_Word</Access>
      <BitFields>
        <BitField>
          <Name>ALPHA</Name>
          <Description>Alpha Channel Value 
These bits define the alpha channel of the output color. These bits can only be written
when data transfers are disabled. Once the transfer has started, they are read-only.</Description>
          <EndBit>31</EndBit>
          <StartBit>24</StartBit>
          <Mutability>rw</Mutability>
        </BitField>
        <BitField>
          <Name>RED</Name>
          <Description>Red Value 
These bits define the red value of the output image. These bits can only be written when
data transfers are disabled. Once the transfer has started, they are read-only.</Description>
          <EndBit>23</EndBit>
          <StartBit>16</StartBit>
          <Mutability>rw</Mutability>
        </BitField>
        <BitField>
          <Name>GREEN</Name>
          <Description>Green Value 
These bits define the green value of the output image. These bits can only be written
when data transfers are disabled. Once the transfer has started, they are read-only.</Description>
          <EndBit>15</EndBit>
          <StartBit>8</StartBit>
          <Mutability>rw</Mutability>
        </BitField>
        <BitField>
          <Name>BLUE</Name>
          <Description>Blue Value 
These bits define the blue value of the output image. These bits can only be written
when data transfers are disabled. Once the transfer has started, they are read-only.</Description>
          <EndBit>7</EndBit>
          <StartBit>0</StartBit>
          <Mutability>rw</Mutability>
        </BitField>
        
         <BitField>
          <Name>RED565</Name>
          <Description>Red Value 
These bits define the red value of the output image. These bits can only be written when
data transfers are disabled. Once the transfer has started, they are read-only.</Description>
          <EndBit>15</EndBit>
          <StartBit>11</StartBit>
          <Mutability>rw</Mutability>
        </BitField>
        <BitField>
          <Name>GREEN565</Name>
          <Description>Green Value 
These bits define the green value of the output image. These bits can only be written
when data transfers are disabled. Once the transfer has started, they are read-only.</Description>
          <EndBit>10</EndBit>
          <StartBit>5</StartBit>
          <Mutability>rw</Mutability>
        </BitField>
        <BitField>
          <Name>BLUE565</Name>
          <Description>Blue Value 
These bits define the blue value of the output image. These bits can only be written
when data transfers are disabled. Once the transfer has started, they are read-only.</Description>
          <EndBit>4</EndBit>
          <StartBit>0</StartBit>
          <Mutability>rw</Mutability>
        </BitField>

        <BitField>
          <Name>ALPHA1555</Name>
          <Description>Alpha Channel Value 
This bit define the alpha channel of the output color. This bit can only be written
when data transfers are disabled. Once the transfer has started, they are read-only.</Description>
          <EndBit>15</EndBit>
          <StartBit>15</StartBit>
          <Mutability>rw</Mutability>
        </BitField>
        <BitField>
          <Name>RED1555</Name>
          <Description>Red Value 
These bits define the red value of the output image. These bits can only be written when
data transfers are disabled. Once the transfer has started, they are read-only.</Description>
          <EndBit>14</EndBit>
          <StartBit>10</StartBit>
          <Mutability>rw</Mutability>
        </BitField>
        <BitField>
          <Name>GREEN1555</Name>
          <Description>Green Value 
These bits define the green value of the output image. These bits can only be written
when data transfers are disabled. Once the transfer has started, they are read-only.</Description>
          <EndBit>9</EndBit>
          <StartBit>5</StartBit>
          <Mutability>rw</Mutability>
        </BitField>
        <BitField>
          <Name>BLUE1555</Name>
          <Description>Blue Value 
These bits define the blue value of the output image. These bits can only be written
when data transfers are disabled. Once the transfer has started, they are read-only.</Description>
          <EndBit>4</EndBit>
          <StartBit>0</StartBit>
          <Mutability>rw</Mutability>
        </BitField>
        
        <BitField>
          <Name>ALPHA4444</Name>
          <Description>Alpha Channel Value 
These bits define the alpha channel of the output color. These bits can only be written
when data transfers are disabled. Once the transfer has started, they are read-only.</Description>
          <EndBit>15</EndBit>
          <StartBit>12</StartBit>
          <Mutability>rw</Mutability>
        </BitField>
        <BitField>
          <Name>RED4444</Name>
          <Description>Red Value 
These bits define the red value of the output image. These bits can only be written when
data transfers are disabled. Once the transfer has started, they are read-only.</Description>
          <EndBit>11</EndBit>
          <StartBit>8</StartBit>
          <Mutability>rw</Mutability>
        </BitField>
        <BitField>
          <Name>GREEN4444</Name>
          <Description>Green Value 
These bits define the green value of the output image. These bits can only be written
when data transfers are disabled. Once the transfer has started, they are read-only.</Description>
          <EndBit>7</EndBit>
          <StartBit>4</StartBit>
          <Mutability>rw</Mutability>
        </BitField>
        <BitField>
          <Name>BLUE4444</Name>
          <Description>Blue Value 
These bits define the blue value of the output image. These bits can only be written
when data transfers are disabled. Once the transfer has started, they are read-only.</Description>
          <EndBit>3</EndBit>
          <StartBit>0</StartBit>
          <Mutability>rw</Mutability>
        </BitField>
      </BitFields>
    </Register>
    
    <Register>
      <Name>OMAR</Name>
      <Description>DMA2D output memory address register</Description>
      <Offset>0x003C</Offset>
      <ResetValue>0x00000000</ResetValue>
      <Access>Byte_HalfWord_Word</Access>
      <BitFields>
        <BitField>
          <Name>MA</Name>
          <Description>Memory Address 
Address of the data used for the output FIFO. These bits can only be written when data
transfers are disabled. Once the transfer has started, they are read-only.
The address alignment must match the image format selected e.g. a 32-bit per pixel
format must be 32-bit aligned and a 16-bit per pixel format must be 16-bit aligned.</Description>
          <EndBit>31</EndBit>
          <StartBit>0</StartBit>
          <Mutability>rw</Mutability>
        </BitField>
      </BitFields>
    </Register>
    
    <Register>
      <Name>OOR</Name>
      <Description>DMA2D output offset register</Description>
      <Offset>0x0040</Offset>
      <ResetValue>0x00000000</ResetValue>
      <Access>Byte_HalfWord_Word</Access>
      <BitFields>
        <BitField>
          <Name>LO</Name>
          <Description>Line Offset 
Line offset used for the output (expressed in pixels). This value is used for the address
generation. It is added at the end of each line to determine the starting address of the
next line. These bits can only be written when data transfers are disabled. Once the
transfer has started, they are read-only.</Description>
          <EndBit>13</EndBit>
          <StartBit>0</StartBit>
          <Mutability>rw</Mutability>
        </BitField>
      </BitFields>
    </Register>
    
    <Register>
      <Name>NLR</Name>
      <Description>DMA2D number of line register</Description>
      <Offset>0x0044</Offset>
      <ResetValue>0x00000000</ResetValue>
      <Access>Byte_HalfWord_Word</Access>
      <BitFields>
        <BitField>
          <Name>PL</Name>
          <Description>Pixel per lines 
Number of pixels per lines of the area to be transferred. These bits can only be written
when data transfers are disabled. Once the transfer has started, they are read-only.
If any of the input image format is 4-bit per pixel, pixel per lines must be even.</Description>
          <EndBit>29</EndBit>
          <StartBit>16</StartBit>
          <Mutability>rw</Mutability>
        </BitField>
        <BitField>
          <Name>NL</Name>
          <Description>Number of lines 
Number of lines of the area to be transferred. These bits can only be written when data
transfers are disabled. Once the transfer has started, they are read-only.</Description>
          <EndBit>15</EndBit>
          <StartBit>0</StartBit>
          <Mutability>rw</Mutability>
        </BitField>
      </BitFields>
    </Register>
    
    <Register>
      <Name>LWR</Name>
      <Description>DMA2D line watermark register</Description>
      <Offset>0x0048</Offset>
      <ResetValue>0x00000000</ResetValue>
      <Access>Byte_HalfWord_Word</Access>
      <BitFields>
        <BitField>
          <Name>LW[15:0]</Name>
          <Description>Line watermark 
These bits allow to configure the line watermark for interrupt generation.
An interrupt is raised when the last pixel of the watermarked line has been transferred.
These bits can only be written when data transfers are disabled. Once the transfer has
started, they are read-only.</Description>
          <EndBit>15</EndBit>
          <StartBit>0</StartBit>
          <Mutability>rw</Mutability>
        </BitField>
      </BitFields>
    </Register>
    
    <Register>
      <Name>AMTCR</Name>
      <Description>DMA2D AHB master timer configuration register</Description>
      <Offset>0x004C</Offset>
      <ResetValue>0x00000000</ResetValue>
      <Access>Byte_HalfWord_Word</Access>
      <BitFields>
        <BitField>
          <Name>DT</Name>
          <Description>Dead Time 
Dead time value in the AHB clock cycle inserted between two consecutive accesses on
the AHB master port. These bits represent the minimum guaranteed number of cycles
between two consecutive AHB accesses.</Description>
          <EndBit>15</EndBit>
          <StartBit>8</StartBit>
          <Mutability>rw</Mutability>
        </BitField>
        <BitField>
          <Name>EN</Name>
          <Description>Enable 
Enables the dead time functionality.</Description>
          <EndBit>0</EndBit>
          <StartBit>0</StartBit>
          <Mutability>rw</Mutability>
        </BitField>
      </BitFields>
    </Register>
    
  </Registers>
</Peripheral>